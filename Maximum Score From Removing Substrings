class Solution {
public:
    
    string removeSubStr(string &s, string &matchSub, int &count) {
        stack<char> st;
        for (char ch : s) {
            if (!st.empty() && st.top() == matchSub[0] && ch == matchSub[1]) {
                st.pop();       
                count++;        
            } else {
                st.push(ch);
            }
        }

        string temp;
        while (!st.empty()) {
            temp.push_back(st.top());
            st.pop();
        }
        reverse(begin(temp), end(temp));
        return temp;
    }

    int maximumGain(string s, int x, int y) {
        int score = 0;

       
        string firstStr = (x > y) ? "ab" : "ba";
        string secondStr = (x > y) ? "ba" : "ab";

        int firstCount = 0;
        
        string remaining = removeSubStr(s, firstStr, firstCount);
        score += firstCount * max(x, y);  

        int secondCount = 0;
        removeSubStr(remaining, secondStr, secondCount);
        score += secondCount * min(x, y);  

        return score;
    }
};
